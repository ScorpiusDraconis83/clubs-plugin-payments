---
import type { ComposedItem } from '.'
import TransactionForm from './TransactionForm.vue'
import type { ClubsPropsPages } from '@devprotocol/clubs-core'
import { Checkout } from '@devprotocol/clubs-core/ui/components'
import { i18nFactory } from '@devprotocol/clubs-core'
import { Strings } from './i18n'
import LoadLibrary from './components/LoadLibrary.astro'

const { item, propertyAddress, rpcUrl, chainId, debugMode, ...other } =
  Astro.props as ClubsPropsPages & {
    item: ComposedItem
    propertyAddress: string
    rpcUrl: string
    chainId: number
    debugMode: boolean
  }

const i18nBase = i18nFactory(Strings)
const langs = Astro.request.headers
  .get('accept-language')
  ?.replace(/;q=[\d\.]+/g, '')
  .split(',') ?? ['en']
const i18n = i18nBase(langs)

const { PUBLIC_POP_CLIENT_KEY } = import.meta.env
---

<LoadLibrary clientKey={PUBLIC_POP_CLIENT_KEY} />

<Checkout
  amount={item.price.yen}
  propertyAddress={propertyAddress}
  fiatCurrency={i18n('JPY')}
  rpcUrl={rpcUrl}
  payload={item.source.payload}
  description={item.source.description}
  useDiscretePaymentFlow={true}
  useInjectedTransactionForm={true}
  itemImageSrc={item.source.imageSrc}
  itemName={item.source.name}
  accessControlUrl={item.source.accessControl?.url}
  accessControlDescription={item.source.accessControl?.description}
  {...other}
>
  <div slot="checkout:main:transaction-form" class="p-3">
    <TransactionForm
      client:load
      item={item}
      chainId={chainId}
      rpcUrl={rpcUrl}
      debugMode={debugMode}
    />
  </div>
  <div slot="checkout:after:transaction-form" class="p-3">
    <a
      href={`/join/${item.source.id}`}
      class="hs-button is-fullwidth is-outlined"
    >
      Pay with {item.source.currency} instead
    </a>
  </div>
  <div slot="checkout:result:before:preview">
    <h3 class="text-2xl font-bold">Your membership is now ready</h3>
  </div>
</Checkout>
